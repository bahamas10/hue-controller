!!!
%html
  %head
    %title Hue Controller
    %link{:rel => "stylesheet", :href => "/css/bootstrap.min.css"}
    %link{:rel => "stylesheet", :href => "/css/global.css"}
    %link{:rel => "stylesheet", :href => "/css/minicolors.css"}
    - unless defined?(skip_action_css)
      %link{:rel => "stylesheet", :href => "/css/controllers/#{action}.css"}

    %script{:src => "/js/jquery-1.8.3.min.js"}
    %script{:src => "/js/bootstrap.min.js"}
    %script{:src => "/js/helpers.js"}
    %script{:src => "/js/jquery-minicolors.js"}
    :javascript
      var hub_info = #{self.config.to_json};
      var HueData = #{self.hue_data.to_json};

  %body
    .navbar.navbar-fixed-top
      .navbar-inner
        .container
          %a.brand{:href => "/"} Hue Controller

          %ul.nav
            %li.dropdown{:class => (action == :index or action == :sets) ? "active" : ""}
              %a.dropdown-toggle{:href => "/", "data-toggle" => "dropdown"}
                Lights
                %span.caret
              %ul.dropdown-menu
                %li
                  %a{:href => "/"} View All
                %li
                  %a{:href => "/sets"} Sets

            %li.dropdown{:class => (action == :effects) ? "active" : ""}
              %a.dropdown-toggle{:href => "/", "data-toggle" => "dropdown"}
                Effects
                %span.caret
              %ul.dropdown-menu
                %li
                  %a{:href => "/effects"} New

          %ul.nav
            %li.dropdown{:class => (action == :control or action == :adv_control) ? "active" : ""}
              %a.dropdown-toggle{:href => "/", "data-toggle" => "dropdown"}
                Control
                %span.caret
              %ul.dropdown-menu
                %li
                  %a{:href => "/control"} Control
                - if self.config[:advanced]
                  %li
                    %a{:href => "/adv-control"} Advanced Control

          %ul.nav
            %li.dropdown{:class => action == :schedules ? "active" : ""}
              %a{:href => "/schedules"} Schedules

          %ul.nav.pull-right
            %li{:class => action == :config ? "active" : ""}
              %a{:href => "/config"} Configuration

    .container
      #info.alert.alert-info.hide

      -# MacRuby has a bug where the yield/layouts that Tilt support doesn't work. Hence this hack to do fake layouts
      = render :haml, action, :layout => false

    %script{:src => "/js/controllers/#{action}.js"}

    :javascript
      $("input.colorpicker").miniColors({opacity: false, letterCase: "uppercase"});
